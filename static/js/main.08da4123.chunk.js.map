{"version":3,"sources":["App.jsx","index.js"],"names":["App","query","data","object","Object","entries","filter","x","includes","forEach","value","key","val","Number","setState","axios","post","then","response","console","log","risk","onChange","loadingRisk","timeout","setTimeout","clearTimeout","calculateRisk","state","style","color","age","blood_pressure","bmi","diabetic_func","glucose","insulin","pregnancies","skin_thickness","transactional","Container","Logo","Title","size","this","Column","width","label","type","name","marginBottom","paddingTop","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.08da4123.chunk.js","sourcesContent":["import React from 'react';\nimport {\n  Header,\n  Form,\n  MainWrapper,\n  Heading,\n  Container,\n  Input,\n  Row,\n  Body,\n  Footer\n} from 'nhsuk-react-components';\nimport './scss/App.scss';\nimport axios from 'axios';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.timeout = null;\n    this.state = {\n      risk: 0,\n      loadingRisk: false,\n      age: 29,\n      blood_pressure: 72,\n      bmi: 32,\n      diabetic_func: 0.371,\n      glucose: 117,\n      insulin: 32,\n      pregnancies: 3,\n      skin_thickness: 23\n    };\n  }\n\n  query = data => {\n    const object = {};\n    Object.entries(data)\n      .filter(x => !x.includes('risk'))\n      .forEach(value => {\n        const [key, val] = value;\n        object[key] = Number(val);\n      });\n    this.setState({ ...object });\n    axios.post('http://localhost:5000/predict', object).then(response => {\n      console.log(response.data[0][0]);\n      this.setState({ risk: response.data[0][0] });\n    });\n  };\n\n  onChange = data => {\n    this.setState({ loadingRisk: true });\n    if (this.timeout === null) {\n      this.timeout = setTimeout(() => {\n        this.query(data);\n        this.setState({ loadingRisk: false });\n        this.timeout = null;\n      }, 500);\n    } else {\n      clearTimeout(this.timeout);\n      this.timeout = setTimeout(() => {\n        this.query(data);\n        this.setState({ loadingRisk: false });\n        this.timeout = null;\n      }, 500);\n    }\n  };\n  calculateRisk = () => {\n    const { risk } = this.state;\n    if (risk <= 0.5) {\n      return <span style={{ color: 'green' }}>low risk</span>;\n    } else if (risk > 0.5 && risk < 0.75) {\n      return <span style={{ color: 'orange' }}>medium risk</span>;\n    } else if (risk >= 0.75) {\n      return <span style={{ color: 'red' }}>high risk</span>;\n    }\n  };\n  render() {\n    return (\n      <>\n        <Header transactional>\n          <Header.Container>\n            <Header.Logo />\n            <Header.Title>Diabetes Outcomes</Header.Title>\n          </Header.Container>\n        </Header>\n        <MainWrapper>\n          <Container>\n            <Heading size=\"xl\">Diabetes Outcomes</Heading>\n            <Body size=\"m\">\n              Predict the likelihood of a diabetes diagnosis by entering the\n              values below.\n            </Body>\n            <hr />\n            <Form onChange={this.onChange}>\n              <Row>\n                <Row.Column width=\"one-third\">\n                  <Input\n                    label={\n                      <>\n                        Pregnancies <small>(0-17, med. 3)</small>\n                      </>\n                    }\n                    type=\"number\"\n                    value=\"3\"\n                    name=\"pregnancies\"\n                    style={{ marginBottom: 30 }}\n                  />\n                  <Input\n                    label={\n                      <>\n                        Glucose Level <small>(44-199, med. 117)</small>\n                      </>\n                    }\n                    value=\"117\"\n                    type=\"number\"\n                    name=\"glucose\"\n                    style={{ marginBottom: 30 }}\n                  />\n                  <Input\n                    label={\n                      <>\n                        Blood Pressure <small>(24-122, med. 72)</small>\n                      </>\n                    }\n                    value=\"72\"\n                    name=\"blood_pressure\"\n                    style={{ marginBottom: 30 }}\n                  />\n                </Row.Column>\n                <Row.Column width=\"one-third\">\n                  <Input\n                    label={\n                      <>\n                        Skin Thickness <small>(7-99, med. 23)</small>\n                      </>\n                    }\n                    value=\"23\"\n                    name=\"skin_thickness\"\n                    style={{ marginBottom: 30 }}\n                  />\n\n                  <Input\n                    label={\n                      <>\n                        Insulin Level <small>(14-846, med. 32)</small>\n                      </>\n                    }\n                    value=\"32\"\n                    name=\"insulin\"\n                    style={{ marginBottom: 30 }}\n                  />\n                  <Input\n                    label={\n                      <>\n                        Body Mass Index <small>(18.2-67.1, med. 32)</small>\n                      </>\n                    }\n                    value=\"32\"\n                    name=\"bmi\"\n                    style={{ marginBottom: 30 }}\n                  />\n                </Row.Column>\n                <Row.Column width=\"one-third\">\n                  <Input\n                    label={\n                      <>\n                        Diabetes Pedigree Function\n                        <br /> <small>(0.078-2.42, med. 0.371)</small>\n                      </>\n                    }\n                    value=\"0.371\"\n                    name=\"diabetic_func\"\n                    style={{ marginBottom: 30 }}\n                  />\n                  <Input\n                    label={\n                      <>\n                        Age <small>(21-81, med. 29)</small>\n                      </>\n                    }\n                    value=\"29\"\n                    name=\"age\"\n                    style={{ marginBottom: 30 }}\n                  />\n                  <Body size=\"md\" style={{ paddingTop: 7 }}>\n                    {this.state.loadingRisk\n                      ? 'Loading...'\n                      : `DNN Outcome: ${this.state.risk}`}\n                  </Body>\n                </Row.Column>\n              </Row>\n            </Form>\n            <hr />\n            <Heading size=\"l\">Our Prediction</Heading>\n            <Heading size=\"m\">\n              You have a {this.calculateRisk()} of having or developing\n              diabetes.\n            </Heading>\n          </Container>\n        </MainWrapper>\n        <Footer />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}